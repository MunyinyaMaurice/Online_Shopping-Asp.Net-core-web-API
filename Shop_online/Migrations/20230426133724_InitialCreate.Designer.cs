// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop_online.Data;

#nullable disable

namespace Shop_online.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230426133724_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("Ordersorder_id")
                        .HasColumnType("int");

                    b.Property<int>("Productsp_id")
                        .HasColumnType("int");

                    b.HasKey("Ordersorder_id", "Productsp_id");

                    b.HasIndex("Productsp_id");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Shop_online.Model.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_id"));

                    b.Property<string>("customer_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_phoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customer_yearOfDate")
                        .HasColumnType("int");

                    b.HasKey("customer_id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Shop_online.Model.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<float>("paymentMethod")
                        .HasColumnType("real");

                    b.Property<float>("totalPaid")
                        .HasColumnType("real");

                    b.HasKey("order_id");

                    b.HasIndex("customer_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Shop_online.Model.Product", b =>
                {
                    b.Property<int>("p_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("p_id"));

                    b.Property<string>("product_details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("product_price")
                        .HasColumnType("real");

                    b.Property<int>("product_quantity")
                        .HasColumnType("int");

                    b.HasKey("p_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Shop_online.Model.Order", null)
                        .WithMany()
                        .HasForeignKey("Ordersorder_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_online.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("Productsp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop_online.Model.Order", b =>
                {
                    b.HasOne("Shop_online.Model.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Shop_online.Model.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
